services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: carddb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - card-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d carddb"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/carddb
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - card-network

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    ports:
      - "3000:80"
    networks:
      - card-network

networks:
  card-network:

volumes:
  postgres_data: